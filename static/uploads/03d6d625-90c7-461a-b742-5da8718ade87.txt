Here's a list of commands you can use to change the terminal prompt in Bash along with detailed explanations:
username white font red background with a /  that is all
export PS1='\[\e[41m\]\u\[\e[m\]/\[\e[0m\] \W\$ '

    PS1='prompt_string':
        This command sets the primary prompt string (PS1) to the specified value.
        Replace 'prompt_string' with the desired prompt format. You can include various escape sequences to display information like username, hostname, current directory, etc.

    \u:  Inserts the username of the current user into the prompt.

    \h:  Inserts the hostname of the system into the prompt.

    \w:  Inserts the current working directory into the prompt.

    \W:  Inserts the basename of the current working directory into the prompt (i.e., only the name of the current directory, not the full path).

    \$:  Displays $ for regular users and # for the root user in the prompt.

    export PS1='prompt_string':
        Similar to PS1='prompt_string', but this command exports the PS1 variable, making the prompt change apply to all subsequent shell sessions.

    source ~/.bashrc:
        Reloads the .bashrc file, applying any changes made to it. This is necessary to see the changes in the current terminal session if you've modified the PS1 variable in .bashrc.

    echo -e 'prompt_string':
        Prints the specified prompt string. You can use this command to test your prompt string before setting it permanently.

    printf 'prompt_string':
        Similar to echo -e, this command prints the specified prompt string. You can use it interchangeably with echo -e.

